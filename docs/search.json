[{"path":"https://yjunechoe.github.io/penngradlings/articles/annotations.html","id":"required-packages","dir":"Articles","previous_headings":"","what":"Required packages","title":"Custom annotations","text":"","code":"library(penngradlings) library(ggplot2) library(grid) library(gridtext)"},{"path":"https://yjunechoe.github.io/penngradlings/articles/annotations.html","id":"html-textbox-annotations-with-annotation_textbox","dir":"Articles","previous_headings":"Required packages","what":"HTML textbox annotations with annotation_textbox","title":"Custom annotations","text":"","code":"p <- ggplot(mtcars, aes(mpg, hp)) +   geom_point()  p annotation <- \"   <span style=\\\"font-size:18px; font-family:'Piazzolla-Black';\\\">    This is a cat:<\/span>   <br><br>   <span style=\\\"font-size:72px; color:'#7950F2';    font-family:'FontAwesome5-Solid';\\\">cat<\/span>   <br><br>   Just look at this   <span style=\\\"font-family:'PiazzollaSC-Regular';\\\">cat!<\/span> \"  tbox1 <- annotation_textbox(   html = annotation,   position = \"top-right\",   halign = 0.5, )  p + annotation_custom(tbox1) tbox2 <- annotation_textbox(   html = annotation,   position = \"center\",   halign = 0.5,   valign = 0.5,   x_offset = -0.1,   y_offset = 0.1,   width = 0.4,   height = 0.5 )  p + annotation_custom(tbox2)"},{"path":[]},{"path":"https://yjunechoe.github.io/penngradlings/articles/fonts.html","id":"required-packages","dir":"Articles","previous_headings":"","what":"Required packages","title":"Custom fonts","text":"","code":"library(penngradlings) library(ggplot2) library(ragg) library(systemfonts) library(textshaping)"},{"path":"https://yjunechoe.github.io/penngradlings/articles/fonts.html","id":"header","dir":"Articles","previous_headings":"","what":"Header","title":"Custom fonts","text":"See: https://yjunechoe.github.io/posts/2021-06-24-setting---debugging-custom-fonts/","code":""},{"path":[]},{"path":[]},{"path":"https://yjunechoe.github.io/penngradlings/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"June Choe. Author, maintainer.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choe J (2022). penngradlings: Themes Utilities Penn GradLingS. https://yjunechoe.github.io/penngradlings, https://github.com/yjunechoe/penngradlings.","code":"@Manual{,   title = {penngradlings: Themes and Utilities for Penn GradLingS},   author = {June Choe},   year = {2022},   note = {https://yjunechoe.github.io/penngradlings, https://github.com/yjunechoe/penngradlings}, }"},{"path":[]},{"path":"https://yjunechoe.github.io/penngradlings/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Penn GradLingS","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"yjunechoe/penngradlings\")"},{"path":"https://yjunechoe.github.io/penngradlings/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Penn GradLingS","text":"package website.","code":"library(penngradlings) #> Package fonts loaded. See `?load_pkg_fonts` for details. library(ggplot2)  ggplot(diamonds, aes(cut, price, fill = cut)) +   stat_summary(geom = \"bar\", fun = \"mean\", width = 0.8) +   scale_y_continuous(     expand = expansion(c(0, 0.1)),     labels = ~ paste0(\"$\", .x)   ) +   scale_fill_pgl_discrete(what = \"cat_coaster\", who = \"xin\") +   labs(     title = \"Price of diamonds by cut quality\",     subtitle = \"This is a bad plot because carat (size) is a confounding variable\",     x = NULL, y = NULL,     caption = \"diamonds dataset from {ggplot2}\"   ) +   theme_pgl_minimal(axis_lines = \"x\", grid_lines = \"y\")"},{"path":"https://yjunechoe.github.io/penngradlings/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 June Choe Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/LICENSE.html","id":"font-licenses","dir":"","previous_headings":"","what":"Font licenses","title":"MIT License","text":"package includes following fonts: - Charis SIL: Downloaded used -font website - https://software.sil.org/charis/download/. - Inter: Downloaded used -Google Fonts - https://fonts.google.com/specimen/Inter/. - Piazzolla: Downloaded used -Google Fonts - https://fonts.google.com/specimen/Piazzolla/. - Atkinson Hyperlegible: Downloaded used -Google Fonts - https://fonts.google.com/specimen/Atkinson+Hyperlegible. - Bootstrap Icons: Downloaded .woff format Bootstrap Icons - https://icons.getbootstrap.com/ - converted .ttf use package. - Material Icons: Downloaded -Google Fonts - https://fonts.google.com/icons/. - Font Awesome 5 Free: Downloaded .otf format “Free” download version distributed Github - https://github.com/FortAwesome/Font-Awesome/. Full copies license agreements (one combination following: SIL OFL, MIT, Apache 2.0) included package source : https://github.com/yjunechoe/penngradlings/tree/master/inst/font-licenses.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/annotation_textbox.html","id":null,"dir":"Reference","previous_headings":"","what":"HTML textbox annotation — annotation_textbox","title":"HTML textbox annotation — annotation_textbox","text":"wrapper around gridtext::textbox_grob convenient positioning themed defaults.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/annotation_textbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HTML textbox annotation — annotation_textbox","text":"","code":"annotation_textbox(   html,   position = \"top-left\",   width = NULL,   height = NULL,   x_offset = 0,   y_offset = 0,   gp = grid::gpar(fontsize = 10, lineheight = 1.4, fontfamily = \"Piazzolla-Regular\"),   box_gp = grid::gpar(col = \"#0E151B\", fill = \"#e5e7eb\", lwd = grid::unit(1.5, \"pt\")),   padding = grid::unit(rep(10, 4), \"pt\"),   margin,   r = grid::unit(5, \"pt\"),   orientation = \"upright\",   ... )"},{"path":"https://yjunechoe.github.io/penngradlings/reference/annotation_textbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HTML textbox annotation — annotation_textbox","text":"html Content textbox html syntax. See supported tags https://wilkelab.org/ggtext/index.html. position One \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\", \"center\". Calculated compute_position. width numeric value npc grid::unit object. Defaults fit contents passed html. height numeric value npc grid::unit object. Defaults fit contents passed html. x_offset x-position offset relative panel space. y_offset y-position offset relative panel space. gp Graphical parameters text grid::gpar. box_gp Graphical parameters bounding box grid::gpar. padding Spacing inner-space box boundaries box contents, supplied grid::unit. margin Spacing outer-space box boundaries position, supplied grid::unit. r Radius box corners, supplied grid::unit. orientation Orientation box. One \"upright\", \"left-rotated\", \"right-rotated\", \"inverted\". ... Passed gridtext::textbox_grob","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/annotation_textbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HTML textbox annotation — annotation_textbox","text":"gridtext::textbox_grob.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/annotation_textbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HTML textbox annotation — annotation_textbox","text":"used non-data-based annotations ggplot2::annotation_custom.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/annotation_textbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HTML textbox annotation — annotation_textbox","text":"","code":"# \\dontrun{ annotation <- annotation_textbox(   html = \"<span style=\\\"font-size:18px; font-family:'Inter-Black';\\\">            This is a cat:<\/span>           <br><br>           <span style=\\\"font-size:72px; color:'#7950F2';            font-family:'FontAwesome5-Solid';\\\">cat<\/span>           <br><br>           Just look at this cat!\",   position = \"top-right\",   halign = 0.5 )  ggplot2::qplot(mpg, hp, data = mtcars) +   ggplot2::annotation_custom(annotation) +   ggplot2::theme_classic()  # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/compute_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Return npc-based positional values for common alignments — compute_position","title":"Return npc-based positional values for common alignments — compute_position","text":"Return npc-based positional values common alignments","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/compute_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return npc-based positional values for common alignments — compute_position","text":"","code":"compute_position(position)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/compute_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return npc-based positional values for common alignments — compute_position","text":"position One \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\", \"center\".","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/compute_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return npc-based positional values for common alignments — compute_position","text":"list hjust, vjust, x, y","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/dot-pgl_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Fonts included in the package — .pgl_fonts","title":"Fonts included in the package — .pgl_fonts","text":"Fonts included package","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/dot-pgl_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fonts included in the package — .pgl_fonts","text":"","code":".pgl_fonts()"},{"path":"https://yjunechoe.github.io/penngradlings/reference/dot-pgl_fonts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fonts included in the package — .pgl_fonts","text":"named list font families font styles","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/dot-pgl_fonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fonts included in the package — .pgl_fonts","text":"","code":"# \\dontrun{ .pgl_fonts() #> $AtkinsonHyperlegible #> [1] \"AtkinsonHyperlegible-Bold\"       \"AtkinsonHyperlegible-BoldItalic\" #> [3] \"AtkinsonHyperlegible-Italic\"     \"AtkinsonHyperlegible-Regular\"    #>  #> $BootstrapIcons #> [1] \"bootstrap-icons\" #>  #> $CharisSIL #> [1] \"CharisSIL-Bold\"    \"CharisSIL-Regular\" #>  #> $FontAwesome5Free #> [1] \"Font-Awesome-5-Brands-Regular-400\" \"Font-Awesome-5-Free-Regular-400\"   #> [3] \"Font-Awesome-5-Free-Solid-900\"     #>  #> $Inter #>  [1] \"Inter-Black\"            \"Inter-BlackItalic\"      \"Inter-Bold\"             #>  [4] \"Inter-BoldItalic\"       \"Inter-ExtraBold\"        \"Inter-ExtraBoldItalic\"  #>  [7] \"Inter-ExtraLight\"       \"Inter-ExtraLightItalic\" \"Inter-Italic\"           #> [10] \"Inter-Light\"            \"Inter-LightItalic\"      \"Inter-Medium\"           #> [13] \"Inter-MediumItalic\"     \"Inter-Regular\"          \"Inter-SemiBold\"         #> [16] \"Inter-SemiBoldItalic\"   \"Inter-Thin\"             \"Inter-ThinItalic\"       #>  #> $MaterialIcons #> [1] \"MaterialIcons-Regular\"         \"MaterialIconsOutlined-Regular\" #>  #> $Piazzolla #>  [1] \"Piazzolla-Black\"           \"Piazzolla-BlackItalic\"     #>  [3] \"Piazzolla-Bold\"            \"Piazzolla-BoldItalic\"      #>  [5] \"Piazzolla-ExtraBold\"       \"Piazzolla-ExtraBoldItalic\" #>  [7] \"Piazzolla-Italic\"          \"Piazzolla-Medium\"          #>  [9] \"Piazzolla-MediumItalic\"    \"Piazzolla-Regular\"         #> [11] \"Piazzolla-SemiBold\"        \"Piazzolla-SemiBoldItalic\"  #>  #> $PiazzollaSC #> [1] \"PiazzollaSC-Black\"     \"PiazzollaSC-Bold\"      \"PiazzollaSC-ExtraBold\" #> [4] \"PiazzollaSC-Medium\"    \"PiazzollaSC-Regular\"   \"PiazzollaSC-SemiBold\"  #>  # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/fct_derive.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive factor levels from another factor with unique pair-wise matches — fct_derive","title":"Derive factor levels from another factor with unique pair-wise matches — fct_derive","text":"Derive factor levels another factor unique pair-wise matches","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/fct_derive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive factor levels from another factor with unique pair-wise matches — fct_derive","text":"","code":"fct_derive(new, old)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/fct_derive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive factor levels from another factor with unique pair-wise matches — fct_derive","text":"new vector old factor","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/fct_derive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive factor levels from another factor with unique pair-wise matches — fct_derive","text":"factor","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/fct_derive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derive factor levels from another factor with unique pair-wise matches — fct_derive","text":"","code":"old <- factor(LETTERS[1:5], LETTERS[c(3, 2, 1, 5, 4)]) old #> [1] A B C D E #> Levels: C B A E D new <- letters[1:5] new #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" factor(new) #> [1] a b c d e #> Levels: a b c d e fct_derive(new, old) #> [1] a b c d e #> Levels: c b a e d"},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a font is registered — font_exists","title":"Check whether a font is registered — font_exists","text":"Wrapper around penngradlings::font_info tests whether output NULL.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a font is registered — font_exists","text":"","code":"font_exists(family, style = \"Regular\")"},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a font is registered — font_exists","text":"family Font family. style Font style. Defaults \"Regular\".","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a font is registered — font_exists","text":"Boolean","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether a font is registered — font_exists","text":"","code":"# \\dontrun{ font_exists(family = \"Arial\") #> [1] TRUE # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_hoist.html","id":null,"dir":"Reference","previous_headings":"","what":"Register members of a font family as their own families — font_hoist","title":"Register members of a font family as their own families — font_hoist","text":"Register members font family families","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_hoist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register members of a font family as their own families — font_hoist","text":"","code":"font_hoist(family, verbose = TRUE)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_hoist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register members of a font family as their own families — font_hoist","text":"family name font family, registered systemfonts::system_fonts() verbose Whether print message newly registered font families","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_hoist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register members of a font family as their own families — font_hoist","text":"","code":"# \\dontrun{ font_hoist(family = \"Arial\") #> v Hoisted 9 variants for \"Arial\" #> * Arial Regular #> * Arial Black #> * Arial Bold #> * Arial Bold Italic #> * Arial Italic #> * Arial Narrow #> * Arial Narrow Bold #> * Arial Narrow Bold Italic #> * Arial Narrow Italic # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a font — font_info","title":"Get information about a font — font_info","text":"Get information font","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a font — font_info","text":"","code":"font_info(family, style = \"Regular\")"},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a font — font_info","text":"family Font family. style Font style. Defaults \"Regular\".","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about a font — font_info","text":"dataframe containing information font. \"source\" attribute indicates found. font exist, invisibly returns NULL.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Find path to a system font — font_path","title":"Find path to a system font — font_path","text":"Wrapper around penngradlings::font_info pulls path font exists.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find path to a system font — font_path","text":"","code":"font_path(family, style = \"Regular\")"},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find path to a system font — font_path","text":"family Font family. style Font style. Defaults \"Regular\". font exist, invisibly returns NULL.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find path to a system font — font_path","text":"String path font file.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_pluck.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a font variant with OpenType feature specifications — font_pluck","title":"Register a font variant with OpenType feature specifications — font_pluck","text":"Register font variant OpenType feature specifications","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_pluck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a font variant with OpenType feature specifications — font_pluck","text":"","code":"font_pluck(family, features, .name)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_pluck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a font variant with OpenType feature specifications — font_pluck","text":"family font family. Regular member family used base. features Character vector 4-letter OpenType feature tags. See complete list OpenType features. Unavailable font features ignored. .name (Optional) Name new font family. Appends registered feature tags new family name default.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/font_pluck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a font variant with OpenType feature specifications — font_pluck","text":"","code":"# \\dontrun{ font_pluck(family = \"Alegreya\", c(\"lnum\", \"ordn\")) #> v Registered \"Alegreya lnum-ordn\". #> Check systemfonts::registry_fonts() for more details. # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/geom_text_outline.html","id":null,"dir":"Reference","previous_headings":"","what":"Outlined text layer — geom_text_outline","title":"Outlined text layer — geom_text_outline","text":"Mimicking SVG-style \"stroke\" styles, function uses 1-2 ggfx::with_outer_glow filters create outlines around text. two layers following uses: first layer designed create visible outline places emphasis text. second layer designed add mask around outlined text makes stand background.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/geom_text_outline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outlined text layer — geom_text_outline","text":"","code":"geom_text_outline(   ...,   geom = \"geom_text\",   inner_params = list(),   outer_params = list(),   use_outer = FALSE )"},{"path":"https://yjunechoe.github.io/penngradlings/reference/geom_text_outline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outlined text layer — geom_text_outline","text":"... Passed geom layer specified geom argument. geom geom layer apply outlines . Defaults inner_params Passed first ggfx::with_outer_glow filter (inner outline). outer_params Passed second ggfx::with_outer_glow filter (outer outline). use_outer Whether outer outline turned . Defaults FALSE.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/geom_text_outline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outlined text layer — geom_text_outline","text":"ggplot2 layer use_outer TRUE, otherwise list two layers.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/geom_text_outline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Outlined text layer — geom_text_outline","text":"particularly useful labels drawn panels grid lines non-white background color. Outlines create stronger perceptual contrast labels.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/geom_text_outline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outlined text layer — geom_text_outline","text":"","code":"# \\dontrun{ library(ggplot2) p <- ggplot(mtcars, aes(mpg, disp, label = rownames(mtcars)))  # By default creates a white outline p + geom_text_outline() +   theme_pgl_minimal()   # You can also add a second, outer outline with `use_outer = TRUE` # This is useful if the plot has a background color like in the default theme p + geom_text_outline(use_outer = TRUE)   # This outer outline is more obvious against a white background p + geom_text_outline(use_outer = TRUE) +   theme_void()   # You can stylize the inner and outer outlines with # arguments passed to `ggfx::with_outer_glow()`. # The most relevant are `expand` and `colour` p +   geom_text_outline(     inner_params = list(expand = 8),     outer_params = list(colour = \"red\"),     use_outer = TRUE   ) +   theme_void()   # You can pass arguments to the layer specified in the `geom` argument in the `...`. # The default geom is `geom_text`, so you can pass arguments specific to it p +   geom_text_outline(     vjust = \"inward\",     hjust = \"inward\",     check_overlap = TRUE,     use_outer = TRUE,     angle = 30   )   # You can also invert the text outlines p +   geom_text_outline(     size = 5,     color = \"white\",     inner_params = list(colour = \"black\", expand = 1.5),     use_outer = TRUE   )   # You can pass other geoms to the `geom` argument (doesn't necessarily have to be a text layer) library(ggrepel) p + geom_text_outline(geom = geom_text_repel)  # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave2.html","id":null,"dir":"Reference","previous_headings":"","what":"Save and open plot — ggsave2","title":"Save and open plot — ggsave2","text":"Wrapper around ggplot2::ggsave() opens rendered output using system's default app graphic type.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save and open plot — ggsave2","text":"","code":"ggsave2(..., load_as_magick = FALSE)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save and open plot — ggsave2","text":"... Passed ggplot2::ggsave(), defaults optimized publication figures. load_as_magick Whether show information saved plot invisibly return ImageMagick object plot post-processing. Defaults FALSE.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave2.html","id":"default-options-for-publication-figures","dir":"Reference","previous_headings":"","what":"Default options for publication figures","title":"Save and open plot — ggsave2","text":"width Defaults 5.2in, 80% full-width letter-sized paper (8.5in) minus 1in margins. Accepts string percentage scale (ex: \"50%\"). height Defaults 3in, 33% full-width letter-sized paper (11in) minus 1in margins. Accepts string percentage scale (ex: \"50%\"). either width height specified percentages, following defaults also set: dpi 300, print standard. units \"\"","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save and open plot — ggsave2","text":"","code":"# \\dontrun{ # p <- ggplot2::qplot(mpg, hp, data = mtcars) # ggplot2::ggsave2(\"myplot.png\", p, width = \"50%\", height = \"30%\") # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Save and open a ggplot — ggsave_auto","title":"Save and open a ggplot — ggsave_auto","text":"Wrapper around ggplot2::ggsave() renders last ggplot/grob image special folder opens using system's default app graphic type.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save and open a ggplot — ggsave_auto","text":"","code":"ggsave_auto(..., load_as_magick = FALSE)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save and open a ggplot — ggsave_auto","text":"... Passed ggplot2::ggsave(), overriding path filename. load_as_magick Whether show information saved plot invisibly return ImageMagick object plot post-processing. Defaults FALSE.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save and open a ggplot — ggsave_auto","text":"magick object path saved plot.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/ggsave_auto.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Save and open a ggplot — ggsave_auto","text":"Creates folder /.ggsave_auto working directory figures saved zero-padding 3 digits (e.g., ggsave_auto-001.png). Appends .ggsave_auto .gitignore file exists. Global params can set options(), argument name followed pgl.ggsave_auto. options(pgl.ggsave_auto.width = 7).","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/load_pkg_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load package fonts — load_pkg_fonts","title":"Load package fonts — load_pkg_fonts","text":"Registers fonts contained penngradlings systemfonts::register_font(). function called silently package loaded.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/load_pkg_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load package fonts — load_pkg_fonts","text":"","code":"load_pkg_fonts(verbose = TRUE)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/load_pkg_fonts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load package fonts — load_pkg_fonts","text":"verbose Whether newly registered fonts printed console. Defaults TRUE.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/load_pkg_fonts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load package fonts — load_pkg_fonts","text":"invisible call systemfonts::registry_fonts() inspection.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/load_pkg_fonts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load package fonts — load_pkg_fonts","text":"styles font family registered Regular member families form \"family-style(s)\". Call systemfonts::registry_fonts() loading fonts details (also returned invisibly).","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/load_pkg_fonts.html","id":"fonts-loaded","dir":"Reference","previous_headings":"","what":"Fonts loaded","title":"Load package fonts — load_pkg_fonts","text":"Charis SIL SIL international, retrieved https://software.sil.org/charis/. Inter Rasmus Andersson, retrieved https://fonts.google.com/specimen/Inter. Piazzolla Juan Pablo del Peral, retrieved https://fonts.google.com/specimen/Piazzolla. Atkinson Hyperlegible Braille Institute, retrieved https://fonts.google.com/specimen/Atkinson+Hyperlegible. Bootstrap Icons Bootstrap Authors, retrieved https://icons.getbootstrap.com/. Material Icons Google Design, retrieved https://fonts.google.com/icons/. Font Awesome 5 Free Dave Gandy https://fontawesome.com/. free version contains subset Regular, Solid, Brand styles: https://fontawesome.com/v5.15/icons?d=gallery&p=2&s=brands,regular,solid&m=free. Copy license font included package source. use fonts package indicate endorsement liability copyright/trademark holders. thank developers fonts open-source contributions permissive licenses.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/load_pkg_fonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load package fonts — load_pkg_fonts","text":"","code":"# \\dontrun{ load_pkg_fonts() #>  #> -- AtkinsonHyperlegible -- #>  #> v 4 styles registered: #> * AtkinsonHyperlegible-Bold #> * AtkinsonHyperlegible-BoldItalic #> * AtkinsonHyperlegible-Italic #> * AtkinsonHyperlegible-Regular #>  #> -- BootstrapIcons -- #>  #> v 1 style registered: #> * BootstrapIcons-Regular #>  #> -- CharisSIL -- #>  #> v 2 styles registered: #> * CharisSIL-Bold #> * CharisSIL-Regular #>  #> -- FontAwesome5Free -- #>  #> v 3 styles registered: #> * FontAwesome5-Brands #> * FontAwesome5-Regular #> * FontAwesome5-Solid #>  #> -- Inter -- #>  #> v 18 styles registered: #> * Inter-Black #> * Inter-BlackItalic #> * Inter-Bold #> * Inter-BoldItalic #> * Inter-ExtraBold #> * Inter-ExtraBoldItalic #> * Inter-ExtraLight #> * Inter-ExtraLightItalic #> * Inter-Italic #> * Inter-Light #> * Inter-LightItalic #> * Inter-Medium #> * Inter-MediumItalic #> * Inter-Regular #> * Inter-SemiBold #> * Inter-SemiBoldItalic #> * Inter-Thin #> * Inter-ThinItalic #>  #> -- MaterialIcons -- #>  #> v 2 styles registered: #> * MaterialIcons-Filled #> * MaterialIcons-Outlined #>  #> -- Piazzolla -- #>  #> v 12 styles registered: #> * Piazzolla-Black #> * Piazzolla-BlackItalic #> * Piazzolla-Bold #> * Piazzolla-BoldItalic #> * Piazzolla-ExtraBold #> * Piazzolla-ExtraBoldItalic #> * Piazzolla-Italic #> * Piazzolla-Medium #> * Piazzolla-MediumItalic #> * Piazzolla-Regular #> * Piazzolla-SemiBold #> * Piazzolla-SemiBoldItalic #>  #> -- PiazzollaSC -- #>  #> v 6 styles registered: #> * PiazzollaSC-Black #> * PiazzollaSC-Bold #> * PiazzollaSC-ExtraBold #> * PiazzollaSC-Medium #> * PiazzollaSC-Regular #> * PiazzollaSC-SemiBold #> -------------------------------------------------------------------------------- #> i Done! Check `systemfonts::registry_fonts()` for more details. # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/mean_se_corrected.html","id":null,"dir":"Reference","previous_headings":"","what":"Corrected calculation of mean and standard error — mean_se_corrected","title":"Corrected calculation of mean and standard error — mean_se_corrected","text":"Adapted ggplot2::mean_se. Corrects denominator variance \\(N - 1\\).","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/mean_se_corrected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Corrected calculation of mean and standard error — mean_se_corrected","text":"","code":"mean_se_corrected(x, mult = 1)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/mean_se_corrected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Corrected calculation of mean and standard error — mean_se_corrected","text":"x Numeric vector. mult Number multiples standard error.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/mean_se_corrected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Corrected calculation of mean and standard error — mean_se_corrected","text":"dataframe three columns: y mean. ymin mean minus multiples standard error. ymax mean plus multiples standard error.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/mean_se_corrected.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Corrected calculation of mean and standard error — mean_se_corrected","text":"","code":"x <- rnorm(100) mean_se_corrected(x) #>           y       ymin      ymax #> 1 0.1187915 0.02199724 0.2155859"},{"path":"https://yjunechoe.github.io/penngradlings/reference/name_self.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a list that names itself — name_self","title":"Construct a list that names itself — name_self","text":"Construct list names ","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/name_self.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a list that names itself — name_self","text":"","code":"name_self(list_expr, .fn = ~.x)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/name_self.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a list that names itself — name_self","text":"list_expr expression using call list, c, like, arguments name-value pairs expression evaluates list. .fn function passed purrr::imap_chr, called character vector returned coercing element symbols list_expr name. Defaults identity function.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/name_self.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a list that names itself — name_self","text":"named list","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/name_self.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Construct a list that names itself — name_self","text":"Names named elements preserved.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/name_self.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a list that names itself — name_self","text":"","code":"name_self(c(min, mean, max)) #> $min #> function (..., na.rm = FALSE)  .Primitive(\"min\") #>  #> $mean #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x000000001591a928> #> <environment: namespace:base> #>  #> $max #> function (..., na.rm = FALSE)  .Primitive(\"max\") #>  name_self(c(min, mean, max), .fn = ~ toupper(.x)) #> $MIN #> function (..., na.rm = FALSE)  .Primitive(\"min\") #>  #> $MEAN #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x000000001591a928> #> <environment: namespace:base> #>  #> $MAX #> function (..., na.rm = FALSE)  .Primitive(\"max\") #>  name_self(c(min, mean, max), .fn = function(x, y) {   paste0(x, y) }) #> $min1 #> function (..., na.rm = FALSE)  .Primitive(\"min\") #>  #> $mean2 #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x000000001591a928> #> <environment: namespace:base> #>  #> $max3 #> function (..., na.rm = FALSE)  .Primitive(\"max\") #>  name_self(c(min, mean, custom_name = max)) #> $min #> function (..., na.rm = FALSE)  .Primitive(\"min\") #>  #> $mean #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x000000001591a928> #> <environment: namespace:base> #>  #> $custom_name #> function (..., na.rm = FALSE)  .Primitive(\"max\") #>   # Helps when naming produced by from `across()` suppressPackageStartupMessages(library(dplyr))  ## With `name_self()`, columns are named after the functions mtcars %>%   group_by(cyl) %>%   summarize(across(where(~ max(.x) > 100), name_self(list(min, mean, max)))) #> # A tibble: 3 x 7 #>     cyl disp_min disp_mean disp_max hp_min hp_mean hp_max #>   <dbl>    <dbl>     <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #> 1     4     71.1      105.     147.     52    82.6    113 #> 2     6    145        183.     258     105   122.     175 #> 3     8    276.       353.     472     150   209.     335  ## More specifically, it allows `\"{.fn\"}` inside `.names` to reference the function names mtcars %>%   group_by(cyl) %>%   summarize(across(disp, name_self(list(min, avg = mean, max)), .names = \"{.col}.{toupper(.fn)}\")) #> # A tibble: 3 x 4 #>     cyl disp.MIN disp.AVG disp.MAX #>   <dbl>    <dbl>    <dbl>    <dbl> #> 1     4     71.1     105.     147. #> 2     6    145       183.     258  #> 3     8    276.      353.     472   ## Without `name_self()`, column names are suffixed with position indices mtcars %>%   group_by(cyl) %>%   summarize(across(where(~ max(.x) > 100), list(min, mean, max))) #> # A tibble: 3 x 7 #>     cyl disp_1 disp_2 disp_3  hp_1  hp_2  hp_3 #>   <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1     4   71.1   105.   147.    52  82.6   113 #> 2     6  145     183.   258    105 122.    175 #> 3     8  276.    353.   472    150 209.    335"},{"path":"https://yjunechoe.github.io/penngradlings/reference/pgl_pals.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a PGL-themed color palette — pgl_pals","title":"Generate a PGL-themed color palette — pgl_pals","text":"Generate PGL-themed color palette","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/pgl_pals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a PGL-themed color palette — pgl_pals","text":"","code":"pgl_pals(what = NULL, who = NULL)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/pgl_pals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a PGL-themed color palette — pgl_pals","text":"object palette extracted . sufficient just supply argument. person associated palette. argument optional.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/pgl_pals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a PGL-themed color palette — pgl_pals","text":"unary palette generating function takes number colors return.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/pgl_pals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a PGL-themed color palette — pgl_pals","text":"","code":"library(colorspace) swatchplot(pgl_pals(\"blueberry_matcha_boba\", \"christine\")())  swatchplot(pgl_pals(\"cat_coaster\", \"xin\")())  swatchplot(pgl_pals(\"cat_coaster\", \"xin\")(15))  swatchplot(pgl_pals(\"hk_postcard_dull\", \"may\")())  swatchplot(pgl_pals(\"hk_postcard_sharp\", \"may\")())"},{"path":"https://yjunechoe.github.io/penngradlings/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://yjunechoe.github.io/penngradlings/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/raggsave_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Save and open any plot — raggsave_auto","title":"Save and open any plot — raggsave_auto","text":"Wrapper around ragg::agg_png() saves output plotting expression special folder opens using system's default app graphic type.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/raggsave_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save and open any plot — raggsave_auto","text":"","code":"raggsave_auto(plot_expr = NULL, ..., load_as_magick = FALSE)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/raggsave_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save and open any plot — raggsave_auto","text":"plot_expr expression plots figure device side effect, captured ragg::agg_png(). ... Passed ragg::agg_png(), overriding filename. Uses width height RStudio viewer pane size default, like ggplot2::ggsave(). load_as_magick Whether show information saved plot invisibly return ImageMagick object plot post-processing. Defaults FALSE.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/raggsave_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save and open any plot — raggsave_auto","text":"magick object path saved plot.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/raggsave_auto.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Save and open any plot — raggsave_auto","text":"Creates folder /.raggsave_auto working directory figures saved zero-padding 3 digits (e.g., raggsave_auto-001.png). Appends .raggsave_auto .gitignore file exists. Global params can set options(), argument name followed pgl.raggsave_auto. options(pgl.raggsave_auto.width = 7).","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/read_pcibex.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the results from a PCIbex experiment — read_pcibex","title":"Read the results from a PCIbex experiment — read_pcibex","text":"Converts comma-separated PCIbex results file rectangular format.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/read_pcibex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the results from a PCIbex experiment — read_pcibex","text":"","code":"read_pcibex(file, encoding = \"UTF-8\", exclude_controller_name = FALSE)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/read_pcibex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the results from a PCIbex experiment — read_pcibex","text":"file Path results file encoding name encoding assumed. exclude_controller_name Whether skip parsing column \"Controller name\". dev version PCIbex (last checked: September 2021), \"Controller name\" appears column specification third column associated values results. since fixed, value set FALSE default.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/read_pcibex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the results from a PCIbex experiment — read_pcibex","text":"dataframe","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/read_pcibex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the results from a PCIbex experiment — read_pcibex","text":"","code":"# \\dontrun{ # It takes a few seconds because it's reading from remote # but the parsing itself is very fast. dplyr::glimpse(   read_pcibex(     \"https://raw.githubusercontent.com/yjunechoe      /Semantic-Persistence/master/data/result.txt\",     exclude_controller_name = FALSE   ) ) #>  #> -- Column specification -------------------------------------------------------- #> cols( #>   Time_results_were_received = col_double(), #>   MD5_hash_of_participant_s_IP_address = col_character(), #>   Controller_name = col_character(), #>   Item_number = col_double(), #>   Element_number = col_double(), #>   Type = col_character(), #>   Group = col_character(), #>   PennElementType = col_character(), #>   PennElementName = col_character(), #>   Parameter = col_character(), #>   Value = col_character(), #>   EventTime = col_character(), #>   Comments = col_character(), #>   Item = col_character(), #>   Cond = col_character(), #>   Group_1 = col_character(), #>   Participant_ID = col_character() #> ) #> Rows: 23,302 #> Columns: 17 #> $ Time_results_were_received           <dbl> 1586129536, 1586129536, 158612953~ #> $ MD5_hash_of_participant_s_IP_address <chr> \"ed21346ef6cb189471f1665c27e1065e~ #> $ Controller_name                      <chr> \"PennController\", \"PennController~ #> $ Item_number                          <dbl> 0, 0, 2, 2, 3, 3, 3, 4, 4, 4, 5, ~ #> $ Element_number                       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ Type                                 <chr> \"consent\", \"consent\", \"intro\", \"i~ #> $ Group                                <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"~ #> $ PennElementType                      <chr> \"PennController\", \"PennController~ #> $ PennElementName                      <chr> \"0\", \"0\", \"2\", \"2\", \"3\", \"b7dbb12~ #> $ Parameter                            <chr> \"_Trial_\", \"_Trial_\", \"_Trial_\", ~ #> $ Value                                <chr> \"Start\", \"End\", \"Start\", \"End\", \"~ #> $ EventTime                            <chr> \"1586129111186\", \"1586129125480\",~ #> $ Comments                             <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"~ #> $ Item                                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, N~ #> $ Cond                                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, N~ #> $ Group_1                              <chr> NA, NA, NA, NA, NA, NA, NA, NA, N~ #> $ Participant_ID                       <chr> NA, NA, NA, NA, NA, NA, NA, NA, N~ # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/scale_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete color scales — scale_color_pgl_discrete","title":"Discrete color scales — scale_color_pgl_discrete","text":"Discrete color scales","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/scale_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete color scales — scale_color_pgl_discrete","text":"","code":"scale_color_pgl_discrete(what = NULL, who = NULL, ...)  scale_colour_pgl_discrete(what = NULL, who = NULL, ...)  scale_fill_pgl_discrete(what = NULL, who = NULL, ...)"},{"path":"https://yjunechoe.github.io/penngradlings/reference/scale_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete color scales — scale_color_pgl_discrete","text":", passed pgl_pals() ... passed ggplot2::discrete_scale()","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/theme_pgl_minimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic penngradlings theme template — theme_pgl_minimal","title":"Basic penngradlings theme template — theme_pgl_minimal","text":"Basic penngradlings theme template","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/theme_pgl_minimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic penngradlings theme template — theme_pgl_minimal","text":"","code":"theme_pgl_minimal(   base_size = 12,   axis_lines = \"\",   grid_lines = \"xy\",   grid_lines_minor = FALSE,   outline_color = \"#1F1C1C\" )"},{"path":"https://yjunechoe.github.io/penngradlings/reference/theme_pgl_minimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic penngradlings theme template — theme_pgl_minimal","text":"base_size Base size text elements axis_lines axis lines drawn, passed string. grid_lines grid lines drawn, passed string. grid_lines_minor Whether minor grid lines draw. Defaults FALSE outline_color Primary color text, line, rectangle outline.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/theme_pgl_minimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic penngradlings theme template — theme_pgl_minimal","text":"theme object created theme()","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/theme_pgl_minimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic penngradlings theme template — theme_pgl_minimal","text":"","code":"# \\dontrun{ library(ggplot2)  ggplot(iris, aes(Petal.Length, Petal.Width, color = Species)) +   geom_point(size = 2) +   labs(     title = \"Petal profile of plant species in the iris dataset\",     subtitle = \"Virginica has the largest petal of the three species\"   ) +   facet_wrap(~Species) +   theme_pgl_minimal(base_size = 11)   ggplot(diamonds, aes(cut, price, fill = cut)) +   stat_summary(geom = \"bar\", fun = \"mean\", width = 0.8) +   scale_y_continuous(     expand = expansion(c(0, 0.1)),     labels = ~ paste0(\"$\", .x)   ) +   scale_fill_manual(values = pgl_pals(\"christine\", \"blueberry_boba\")) +   labs(     title = \"Price of diamonds by cut quality\",     subtitle = \"This is a bad explanatory plot because carat (size) is a confounding variable\",     x = NULL, y = NULL,     caption = \"diamonds dataset from {ggplot2}\"   ) +   theme_pgl_minimal(axis_lines = \"x\", grid_lines = \"y\") #> Error: Insufficient values in manual scale. 5 needed but only 1 provided.  # }"},{"path":"https://yjunechoe.github.io/penngradlings/reference/update_ggplot_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify defaults ggplot2 layer aesthetics for penngradlings — update_ggplot_defaults","title":"Modify defaults ggplot2 layer aesthetics for penngradlings — update_ggplot_defaults","text":"Modify defaults ggplot2 layer aesthetics penngradlings","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/update_ggplot_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify defaults ggplot2 layer aesthetics for penngradlings — update_ggplot_defaults","text":"","code":"update_ggplot_defaults()"},{"path":"https://yjunechoe.github.io/penngradlings/reference/zerowidth_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an HTML span of the unicode zero-width character — zerowidth_char","title":"Create an HTML span of the unicode zero-width character — zerowidth_char","text":"Helper function adjusting paragraph margins use ggtext/gridtext, natively support margin/padding styles.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/zerowidth_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an HTML span of the unicode zero-width character — zerowidth_char","text":"","code":"zerowidth_char(size = 12, units = \"px\")"},{"path":"https://yjunechoe.github.io/penngradlings/reference/zerowidth_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an HTML span of the unicode zero-width character — zerowidth_char","text":"size Size zero-width character units Defaults \"px\"","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/zerowidth_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an HTML span of the unicode zero-width character — zerowidth_char","text":"string","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/zerowidth_char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an HTML span of the unicode zero-width character — zerowidth_char","text":"zero-width unicode character ever takes vertical space, placed -line size determines amount \"top-margins\" paragraph. allows finer control spacing.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/reference/zerowidth_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an HTML span of the unicode zero-width character — zerowidth_char","text":"","code":"# \\dontrun{ library(ggtext)  ggplot() +   geom_richtext(aes(0, 0, label = \"This is a line<br><br>This is a paragraph<br>of text.\"))   ggplot() +   geom_richtext(aes(0, 0, label = paste0(     \"This is a line<br>\",     zerowidth_char(30),     \"This is a paragraph<br>of text.\"   ))) #> Warning: unable to translate '<U+200B>agg_png122.5' to native encoding #> Warning: unable to translate '<U+200B>agg_png122.5' to native encoding  # }"},{"path":[]},{"path":[]},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"new-functions-0-2-2","dir":"Changelog","previous_headings":"","what":"New functions","title":"penngradlings 0.2.2","text":"fct_derive() derive levels another factor unique pair-wise matches","code":""},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"enhancements-0-2-2","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"penngradlings 0.2.2","text":"read_pcibex() gains encoding argument specifying file’s character encoding (#18) theme_pgl_minimal() re-written scale better, default value base_size changed 12","code":""},{"path":[]},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"new-functions-0-2-1","dir":"Changelog","previous_headings":"","what":"New functions","title":"penngradlings 0.2.1","text":"raggsave_auto() save arbitrary plot ragg::agg_png()","code":""},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"enhancements-0-2-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"penngradlings 0.2.1","text":"read_pcibex() gains encoding argument specifying file’s character encoding. ggsave_auto() supports auto rendering grobs","code":""},{"path":[]},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"new-functions-0-2-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"penngradlings 0.2.0","text":"scale_color/fill_pgl_discrete()","code":""},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"enhancements-0-2-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"penngradlings 0.2.0","text":"Overhaul pgl_pals(). ’s now function factory","code":""},{"path":[]},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"new-functions-0-1-1","dir":"Changelog","previous_headings":"","what":"New functions","title":"penngradlings 0.1.1","text":"name_self() list-constructor function, mostly help naming multiple columns passing list functions dplyr::across(). read_pcibex() reading results PCIbex experiment.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"enhancements-0-1-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"penngradlings 0.1.1","text":"can now set global options ggsave_auto() options(ggsave_auto.*). package now also comes RStudio addin calling ggsave_auto() (one possible keyboard binding Ctrl/Cmd+Shift+G, overwrites “Find Previous” shortcut). theme_pgl_minimal() gets strip.placement = outside hack margins space facet panel blank secondary axis.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"penngradlings-010","dir":"Changelog","previous_headings":"","what":"penngradlings 0.1.0","title":"penngradlings 0.1.0","text":"First release.","code":""},{"path":[]},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"fonts-0-1-0","dir":"Changelog","previous_headings":"New functions","what":"Fonts","title":"penngradlings 0.1.0","text":"package packs 8 open source font families: Atkinson Hyperlegible, Bootstrap Icons, Charis SIL, Font Awesome 5 Free, Inter, Material Icons, Piazzolla, Piazzolla SC. Fonts automatically registered package load. See .pgl_fonts() details. font_*() family helper functions inspecting, registering, shaping fonts - font_hoist(), font_pluck(), font_info(), font_exists(), font_path().","code":""},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"themes-0-1-0","dir":"Changelog","previous_headings":"New functions","what":"Themes","title":"penngradlings 0.1.0","text":"theme_pgl_basic(), low-ink theme design built top ggplot2::theme_minimal(), options turning /axis grid lines.","code":""},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"layers-0-1-0","dir":"Changelog","previous_headings":"New functions","what":"Layers","title":"penngradlings 0.1.0","text":"Stylized panel annotations geom_text_outline() annotation_textbox().","code":""},{"path":"https://yjunechoe.github.io/penngradlings/news/index.html","id":"saverender-0-1-0","dir":"Changelog","previous_headings":"New functions","what":"Save/render","title":"penngradlings 0.1.0","text":"ggsave_auto(), wrapper around ggplot2::ggsave() offering convenience interactive plotting. Accumulates plots rendered function separate ./ggsave_auto directory opens saved figure back using system’s default photo-viewing app. Includes option reading saved figure back {magick} object.","code":""}]
